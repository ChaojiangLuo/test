package org.chromium.alloy.adb;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketAddress;



/**
 * TODO: Insert description here. (generated by penghuang)
 */
public class Server implements Runnable {
  
  /**
   * 
   */
  private static final int DEFAULT_ADB_PORT = 5555;
  
  private static Server sServer = null;
  private static Thread sServerThread = null;
  
  private ServerSocket mServerSocket = null;
  
  
  private Server() {
  }
  
  @Override
  public void run() {
    assert (mServerSocket == null);

    try {
      mServerSocket = new ServerSocket();
    } catch (IOException e) {
      e.printStackTrace();
    }

    int port = DEFAULT_ADB_PORT;
    while (true) {
      // Find a free port.
      SocketAddress endpoint = new InetSocketAddress("127.0.0.1", port);
      try {
        mServerSocket.bind(endpoint);
      } catch (IOException e) {
        port += 2;
        continue;
      }
      break;
    }
    assert (mServerSocket.isBound());
    while (true) {
      try {
        Socket socket = mServerSocket.accept();
        System.out.println("Got an incoming connection, s = " + socket);
      } catch (IOException e) {
        // TODO(penghuang): Auto-generated catch block
        e.printStackTrace();
      }
    }
  }
  
  public static void _start() {
    assert (sServer == null);
    sServer = new Server();
    sServerThread = new Thread(sServer, "adb");
    sServerThread.start();
  }
  
  public static void shutdown() {
    try {
      sServerThread.join();
    } catch (InterruptedException e) {
      // TODO(penghuang): Auto-generated catch block
      e.printStackTrace();
    }
  }
}
